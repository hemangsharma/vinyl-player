{"ast":null,"code":"var _jsxFileName = \"/Users/hemang/Desktop/vinyl-player/src/VinylPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport './VinylPlayer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VinylPlayer = ({\n  track,\n  changeTrack,\n  token\n}) => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLandscape, setIsLandscape] = useState(window.innerWidth > window.innerHeight);\n  useEffect(() => {\n    if (track) {\n      document.body.style.backgroundImage = `url(${track.album.images[0].url})`;\n    }\n    const handleResize = () => {\n      setIsLandscape(window.innerWidth > window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [track]);\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: () => changeTrack('next'),\n    onSwipedRight: () => changeTrack('prev')\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vinyl-player\",\n    ...swipeHandlers,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `vinyl-record ${isPlaying ? 'spinning' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: track.album.images[0].url,\n        alt: \"Vinyl Cover\",\n        className: \"vinyl-cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isLandscape ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Swipe to change tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeTrack('prev'),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlay,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => changeTrack('next'),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n      token: token,\n      uris: [track.uri],\n      play: isPlaying,\n      callback: state => {\n        if (!state.isPlaying) setIsPlaying(false);\n      },\n      styles: {\n        activeColor: '#1DB954',\n        bgColor: '#333',\n        color: '#fff',\n        loaderColor: '#1DB954',\n        sliderColor: '#1DB954',\n        trackArtistColor: '#ccc',\n        trackNameColor: '#fff'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(VinylPlayer, \"69m0e7mMvIefXgFHFkSwzNnDuWk=\", false, function () {\n  return [useSwipeable];\n});\n_c = VinylPlayer;\nexport default VinylPlayer;\nvar _c;\n$RefreshReg$(_c, \"VinylPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useSwipeable","SpotifyPlayer","jsxDEV","_jsxDEV","VinylPlayer","track","changeTrack","token","_s","isPlaying","setIsPlaying","isLandscape","setIsLandscape","window","innerWidth","innerHeight","document","body","style","backgroundImage","album","images","url","handleResize","addEventListener","removeEventListener","togglePlay","swipeHandlers","onSwipedLeft","onSwipedRight","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","uris","uri","play","callback","state","styles","activeColor","bgColor","color","loaderColor","sliderColor","trackArtistColor","trackNameColor","_c","$RefreshReg$"],"sources":["/Users/hemang/Desktop/vinyl-player/src/VinylPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport './VinylPlayer.css';\n\nconst VinylPlayer = ({ track, changeTrack, token }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLandscape, setIsLandscape] = useState(window.innerWidth > window.innerHeight);\n\n  useEffect(() => {\n    if (track) {\n      document.body.style.backgroundImage = `url(${track.album.images[0].url})`;\n    }\n    const handleResize = () => {\n      setIsLandscape(window.innerWidth > window.innerHeight);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [track]);\n\n  const togglePlay = () => {\n    setIsPlaying(!isPlaying);\n  };\n\n  const swipeHandlers = useSwipeable({\n    onSwipedLeft: () => changeTrack('next'),\n    onSwipedRight: () => changeTrack('prev'),\n  });\n\n  return (\n    <div className=\"vinyl-player\" {...swipeHandlers}>\n      <div className={`vinyl-record ${isPlaying ? 'spinning' : ''}`}>\n        <img src={track.album.images[0].url} alt=\"Vinyl Cover\" className=\"vinyl-cover\" />\n      </div>\n      <div className=\"arm\"></div>\n      {isLandscape ? (\n        <div>Swipe to change tracks</div>\n      ) : (\n        <div>\n          <button onClick={() => changeTrack('prev')}>Previous</button>\n          <button onClick={togglePlay}>{isPlaying ? 'Pause' : 'Play'}</button>\n          <button onClick={() => changeTrack('next')}>Next</button>\n        </div>\n      )}\n      <SpotifyPlayer\n        token={token}\n        uris={[track.uri]}\n        play={isPlaying}\n        callback={(state) => {\n          if (!state.isPlaying) setIsPlaying(false);\n        }}\n        styles={{\n          activeColor: '#1DB954',\n          bgColor: '#333',\n          color: '#fff',\n          loaderColor: '#1DB954',\n          sliderColor: '#1DB954',\n          trackArtistColor: '#ccc',\n          trackNameColor: '#fff',\n        }}\n      />\n    </div>\n  );\n};\n\nexport default VinylPlayer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}