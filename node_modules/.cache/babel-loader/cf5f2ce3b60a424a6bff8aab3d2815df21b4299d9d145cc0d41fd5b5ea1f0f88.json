{"ast":null,"code":"import _defineProperty from \"/Users/hemang/Desktop/vinyl-player/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport chroma from './chroma';\nimport compare from './compare';\nimport darken from './darken';\nimport desaturate from './desaturate';\nimport fade from './fade';\nimport formatCSS from './format-css';\nimport lighten from './lighten';\nimport luminance from './luminance';\nimport parseColor from './modules/parse-color';\nimport { invariant } from './modules/utils';\nimport rotate from './rotate';\nimport saturate from './saturate';\nimport textColor from './text-color';\nclass Colorizr {\n  constructor(color) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _defineProperty(this, \"hex\", void 0);\n    _defineProperty(this, \"model\", void 0);\n    _defineProperty(this, \"hsl\", void 0);\n    _defineProperty(this, \"rgb\", void 0);\n    invariant(!!color, 'color is required');\n    const {\n      model = 'rgb'\n    } = options;\n    const {\n      hex,\n      hsl,\n      rgb\n    } = parseColor(color);\n    this.model = model;\n    this.hex = hex;\n    this.hsl = hsl;\n    this.rgb = rgb;\n  }\n  /**\n   * Get css string\n   */\n  get css() {\n    return formatCSS(this.hsl, {\n      model: this.model\n    });\n  }\n  /**\n   * Get the red value\n   */\n  get red() {\n    return Number(this.rgb.r);\n  }\n  /**\n   * Get the green value\n   */\n  get green() {\n    return Number(this.rgb.g);\n  }\n  /**\n   * Get the blue value\n   */\n  get blue() {\n    return Number(this.rgb.b);\n  }\n  /**\n   * Get the hue value\n   */\n  get hue() {\n    return Number(this.hsl.h);\n  }\n  /**\n   * Get the saturation value\n   */\n  get saturation() {\n    return Number(this.hsl.s);\n  }\n  /**\n   * Get the lightness value\n   */\n  get lightness() {\n    return Number(this.hsl.l);\n  }\n  /**\n   * Get the luminance value\n   */\n  get luminance() {\n    return luminance(this.hex);\n  }\n  /**\n   * Get the chroma value\n   */\n  get chroma() {\n    return chroma(this.hex);\n  }\n  /**\n   * Get the contrasted color\n   */\n  get textColor() {\n    return textColor(this.hex);\n  }\n  /**\n   * Test 2 colors for compliance\n   */\n  compare(input) {\n    return compare(this.hex, input);\n  }\n  /**\n   * Increase lightness\n   */\n  lighten() {\n    let percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    return lighten(this.hex, percentage);\n  }\n  /**\n   * Decrease lightness\n   */\n  darken() {\n    let percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    return darken(this.hex, percentage);\n  }\n  /**\n   * Increase saturation\n   */\n  saturate() {\n    let percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    return saturate(this.hex, percentage);\n  }\n  /**\n   * Decrease saturation\n   */\n  desaturate() {\n    let percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    return desaturate(this.hex, percentage);\n  }\n  /**\n   * Invert color\n   */\n  invert() {\n    return rotate(this.hex, 180);\n  }\n  /**\n   * Rotate color\n   */\n  rotate() {\n    let degrees = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n    return rotate(this.hex, degrees);\n  }\n  /**\n   * Fade color\n   */\n  fade() {\n    let percentage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    return fade(this.hex, percentage, this.model);\n  }\n}\nexport { default as brightnessDifference } from './brightness-difference';\nexport { default as chroma } from './chroma';\nexport { default as colorDifference } from './color-difference';\nexport { default as compare } from './compare';\nexport { default as contrast } from './contrast';\nexport { default as darken } from './darken';\nexport { default as desaturate } from './desaturate';\nexport { default as fade } from './fade';\nexport { default as formatCSS } from './format-css';\nexport { default as formatHex } from './format-hex';\nexport { default as hex2hsl } from './hex2hsl';\nexport { default as hex2rgb } from './hex2rgb';\nexport { default as hsl2hex } from './hsl2hex';\nexport { default as hsl2rgb } from './hsl2rgb';\nexport { default as isValidColor } from './is-valid-color';\nexport { default as isValidHex } from './is-valid-hex';\nexport { default as lighten } from './lighten';\nexport { default as luminance } from './luminance';\nexport { default as name } from './name';\nexport { default as palette } from './palette';\nexport { default as parseCSS } from './parse-css';\nexport { default as random } from './random';\nexport { default as rgb2hex } from './rgb2hex';\nexport { default as rgb2hsl } from './rgb2hsl';\nexport { default as rotate } from './rotate';\nexport { default as saturate } from './saturate';\nexport { default as scheme } from './scheme';\nexport { default as textColor } from './text-color';\nexport * from './types';\nexport default Colorizr;","map":{"version":3,"names":["chroma","compare","darken","desaturate","fade","formatCSS","lighten","luminance","parseColor","invariant","rotate","saturate","textColor","Colorizr","constructor","color","options","arguments","length","undefined","_defineProperty","model","hex","hsl","rgb","css","red","Number","r","green","g","blue","b","hue","h","saturation","s","lightness","l","input","percentage","invert","degrees","default","brightnessDifference","colorDifference","contrast","formatHex","hex2hsl","hex2rgb","hsl2hex","hsl2rgb","isValidColor","isValidHex","name","palette","parseCSS","random","rgb2hex","rgb2hsl","scheme"],"sources":["/Users/hemang/Desktop/vinyl-player/node_modules/colorizr/src/index.ts"],"sourcesContent":["import chroma from './chroma';\nimport compare from './compare';\nimport darken from './darken';\nimport desaturate from './desaturate';\nimport fade from './fade';\nimport formatCSS from './format-css';\nimport lighten from './lighten';\nimport luminance from './luminance';\nimport parseColor from './modules/parse-color';\nimport { invariant } from './modules/utils';\nimport rotate from './rotate';\nimport saturate from './saturate';\nimport textColor from './text-color';\nimport { Analysis, HSL, Options, RGB, RGBArray } from './types';\n\nclass Colorizr {\n  public hex: string;\n  private readonly model: Options['model'];\n  public hsl: HSL;\n  public rgb: RGB;\n\n  constructor(color: string | HSL | RGB | RGBArray, options: Options = {}) {\n    invariant(!!color, 'color is required');\n\n    const { model = 'rgb' } = options;\n    const { hex, hsl, rgb } = parseColor(color);\n\n    this.model = model;\n    this.hex = hex;\n    this.hsl = hsl;\n    this.rgb = rgb;\n  }\n\n  /**\n   * Get css string\n   */\n  get css(): string {\n    return formatCSS(this.hsl, { model: this.model });\n  }\n\n  /**\n   * Get the red value\n   */\n  get red(): number {\n    return Number(this.rgb.r);\n  }\n\n  /**\n   * Get the green value\n   */\n  get green(): number {\n    return Number(this.rgb.g);\n  }\n\n  /**\n   * Get the blue value\n   */\n  get blue(): number {\n    return Number(this.rgb.b);\n  }\n\n  /**\n   * Get the hue value\n   */\n  get hue(): number {\n    return Number(this.hsl.h);\n  }\n\n  /**\n   * Get the saturation value\n   */\n  get saturation(): number {\n    return Number(this.hsl.s);\n  }\n\n  /**\n   * Get the lightness value\n   */\n  get lightness(): number {\n    return Number(this.hsl.l);\n  }\n\n  /**\n   * Get the luminance value\n   */\n  get luminance(): number {\n    return luminance(this.hex);\n  }\n\n  /**\n   * Get the chroma value\n   */\n  get chroma(): number {\n    return chroma(this.hex);\n  }\n\n  /**\n   * Get the contrasted color\n   */\n  get textColor(): string {\n    return textColor(this.hex);\n  }\n\n  /**\n   * Test 2 colors for compliance\n   */\n  public compare(input: string): Analysis {\n    return compare(this.hex, input);\n  }\n\n  /**\n   * Increase lightness\n   */\n  public lighten(percentage = 10): string {\n    return lighten(this.hex, percentage);\n  }\n\n  /**\n   * Decrease lightness\n   */\n  public darken(percentage = 10): string {\n    return darken(this.hex, percentage);\n  }\n\n  /**\n   * Increase saturation\n   */\n  public saturate(percentage = 10): string {\n    return saturate(this.hex, percentage);\n  }\n\n  /**\n   * Decrease saturation\n   */\n  public desaturate(percentage = 10): string {\n    return desaturate(this.hex, percentage);\n  }\n\n  /**\n   * Invert color\n   */\n  public invert(): string {\n    return rotate(this.hex, 180);\n  }\n\n  /**\n   * Rotate color\n   */\n  public rotate(degrees = 15): string {\n    return rotate(this.hex, degrees);\n  }\n\n  /**\n   * Fade color\n   */\n  public fade(percentage = 10): string {\n    return fade(this.hex, percentage, this.model);\n  }\n}\n\nexport { default as brightnessDifference } from './brightness-difference';\nexport { default as chroma } from './chroma';\nexport { default as colorDifference } from './color-difference';\nexport { default as compare } from './compare';\nexport { default as contrast } from './contrast';\nexport { default as darken } from './darken';\nexport { default as desaturate } from './desaturate';\nexport { default as fade } from './fade';\nexport { default as formatCSS } from './format-css';\nexport { default as formatHex } from './format-hex';\nexport { default as hex2hsl } from './hex2hsl';\nexport { default as hex2rgb } from './hex2rgb';\nexport { default as hsl2hex } from './hsl2hex';\nexport { default as hsl2rgb } from './hsl2rgb';\nexport { default as isValidColor } from './is-valid-color';\nexport { default as isValidHex } from './is-valid-hex';\nexport { default as lighten } from './lighten';\nexport { default as luminance } from './luminance';\nexport { default as name } from './name';\nexport { default as palette } from './palette';\nexport { default as parseCSS } from './parse-css';\nexport { default as random } from './random';\nexport { default as rgb2hex } from './rgb2hex';\nexport { default as rgb2hsl } from './rgb2hsl';\nexport { default as rotate } from './rotate';\nexport { default as saturate } from './saturate';\nexport { default as scheme } from './scheme';\nexport { default as textColor } from './text-color';\n\nexport * from './types';\n\nexport default Colorizr;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}